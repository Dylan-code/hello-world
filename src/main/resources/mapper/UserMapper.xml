<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.marx.dao.UserMapper">


    <resultMap id="userMap" type="User">
        <result property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <collection property="roles" ofType="Role">
            <result property="roleId" column="role_id"/>
            <result property="roleName" column="role_name"/>
        </collection>
    </resultMap>

    <select id="allUser" resultMap="userMap">
        select u.id id, u.username username, u.password password, r.role_id role_id, r.role_name role_name
        from
             `role` as r ,user_role as ur,`user` as u
        where
              ur.role_id = r.role_id and u.id = ur.user_id
    </select>
    
    <insert id="addRole" >
        insert into user_role (user_id, role_id)
        values
            <foreach collection="roleIds" item="roleId" separator=",">
                (#{userId}, #{roleId})
            </foreach>
    </insert>

    <delete id="deleteRole" >
        delete from user_role
        <where>
            <if test="userId != null and userId != ''">
               and user_id = #{userId}
            </if>
            <if test="roleIds != null and roleIds != ''">
                and role_id in
                <foreach collection="roleIds" item="roleId" open="(" separator="," close=")">
                    #{roleId}
                </foreach>
            </if>
        </where>
    </delete>

    <select id="queryOne" resultMap="userMap">
        select u.id id, u.username username, u.password password, r.role_id role_id, r.role_name role_name
        from
            `role` as r ,user_role as ur,`user` as u
        where
            ur.role_id = r.role_id and u.id = ur.user_id and username = #{username}
    </select>

    <update id="modUser" parameterType="User">
        update `user`
        set password = #{password}
        where username = #{username};
    </update>

    <insert id="addUser" parameterType="User">
        insert into user (id, username, password)
        values (#{id}, #{username}, #{password});
    </insert>

    <delete id="deleteUser" >
        delete from `user` where username = #{username};
    </delete>

</mapper>